{"input": "Suppose the characters 0,1, . . . ,8,9,A,B,C,D, E,F are used to represent a hexadecimal (base-16) number. Here A = 10, B = 11, . . . ,F = 15. What is the largest base-10 integer that can be represented with a two-digit hexadecimal number, such as 14 or 3A?\n(A) 32\n(B) 225\n(C) 255\n(D) 256", "output": "(C)"}
{"input": "The code segment below uses the procedure IsFound (list, item), which returns true if item appears in list and returns false otherwise. The list resultList is initially empty.\n  FOR EACH item IN inputList1{\n IF (isFound (inputList2, item) )\n APPEND (resultList, item)\n }\n Which of the following best describes the contents of resultList after the code segment is executed?\n(A) All elements in inputListl followed by all elements in inputList2\n(B) Only elements that appear in both inputListl and inputList2\n(C) Only elements that appear in either inputListl or inputList2 but not in both lists\n(D) Only elements that appear in inputListl but not in inputList2", "output": "(B)"}
{"input": "In Python 3, which of the following function checks in a string that all characters are in uppercase?\n(A) isupper()\n(B) join(seq)\n(C) len(string)\n(D) ljust(width[, fillchar])", "output": "(A)"}
{"input": "The procedure below is intended to display the index in a list of unique names (nameList) where a particular name (targetName) is found. lf targetName is not found in nameList, the code should display 0.\n PROCEDURE FindName (nameList, targetName)\n {\n  index ← 0\n  FOR EACH name IN nameList\n  {\n   index ← index + 1\n   IF (name = targetName)\n   {\n   foundIndex ← index\n   }\n   ELSE\n   {\n   foundIndex ← 0\n   }\n  }\n  DISPLAY (foundIndex)\n }\n Which of the following procedure calls can be used to demonstrate that the procedure does NOT Work as intended?\n(A) FindName ([\"Andrea\", \"Ben\"], \"Ben\" )\n(B) FindName ([\"Andrea\", \"Ben\" ], \"Diane\" )\n(C) FindName ([\"Andrea\", \"Ben\", \"Chris\"], \"Ben\")\n(D) FindName ([\"Andrea\", \"Chris\", \"Diane\"], \"Ben\")", "output": "(C)"}
{"input": "In Python 3, which of the following function sets the integer starting value used in generating random numbers?\n(A) choice(seq)\n(B) randrange ([start,] stop [,step])\n(C) random()\n(D) seed([x])", "output": "(D)"}
{"input": "Which of the following best explains how data is typically assembled in packets for transmission over the Internet?\n(A) Each packet contains data to be transmitted, along with metadata containing information used for routing the data.\n(B) Each packet contains an encrypted version of the data to be transmitted, along with metadata containing the key needed to decrypt the data.\n(C) Each packet contains only the metadata used to establish a direct connection so that the data can be transmitted.\n(D) Each packet contains multiple data files bundled together, along with metadata describing how to categorize each data file.", "output": "(A)"}
{"input": "A method is to be written to search an array for a value that is larger than a given item and return its index. The problem specification does not indicate what should be returned if there are several such values in the array. Which of the following actions would be best?\n(A) The method should be written on the assumption that there is only one value in the array that is larger than the given item.\n(B) The method should be written so as to return the index of every occurrence of a larger value.\n(C) The specification should be modified to indicate what should be done if there is more than one index of larger values.\n(D) The method should be written to output a message if more than one larger value is found.", "output": "(C)"}
{"input": "If a, b, and c are integers, which of the following conditions is sufficient to guarantee that the expression a < c || a < b && !(a == c) evaluates to true?\n(A) a < c\n(B) a < b\n(C) a > b\n(D) a == b", "output": "(A)"}
{"input": "Which types of functions grow the slowest?\n(A) O(log e^N)\n(B) O(log N)\n(C) O(log log N)\n(D) O(N)", "output": "(C)"}
{"input": "A programmer is writing a program that is intended to be able to process large amounts of data. Which of the following considerations is LEAST likely to affect the ability of the program to process larger data sets?\n(A) How long the program takes to run\n(B) How many programming statements the program contains\n(C) How much memory the program requires as it runs\n(D) How much storage space the program requires as it runs", "output": "(B)"}
{"input": "The algorithm below is used to simulate the results of flipping a coin 4 times. Consider the goal of determining Whether the simulation resulted in an equal number of heads and tails.\n\n   Step l : Initialize the variables heads_counter and f1ip_counter to 0.\n   Step 2 : A variable coin_f1ip is randomly assigned a value of either 0 or l.\n   If coin_f1ip has the value 0, the coin flip result is heads, so\n  heads_counter is incremented by 1.\n   Step 3 : Increment the value of f1ip_counter by l.\n   Step 4 : Repeat steps 2 and 3 until f1ip_counter equals 4.\n\n Following execution of the algorithm, which of the following expressions indicates that the simulation resulted in an equal number of heads and tails?\n(A) coin_f1ip = 1\n(B) flip_counter = 1\n(C) flip_counter = 2\n(D) heads_counter = 2", "output": "(D)"}
{"input": "The following procedure is intended to return the number of times the value val appears in the list myList. The procedure does not work as intended.\n Line 1: PROCEDURE countNumOccurences(myList, val)\n Line 2: {\n Line 3: FOR EACH item IN myList\n Line 4: {\n Line 5: count 0\n Line 6: IF(item = val)\n Line 7: {\n Line 8: count count + 1\n Line 9: }\n Line 10: }\n Line 11: RETURN(count)\n Line 12:}\n Which of the following changes can be made so that the procedure will work as intended?\n(A) Changing line 6 to IF(item = count)\n(B) Changing line 6 to IF(myList[item] = val)\n(C) Moving the statement in line 5 so that it appears between lines 2 and 3\n(D) Moving the statement in line 11 so that it appears between lines 9 and 10", "output": "(C)"}
{"input": "A Web site uses several strategies to prevent unauthorized individuals from accessing user accounts. Which of the following is NOT an example of multifactor authentication?\n(A) Each employee for a company is issued a USB device that contains a unique token code. To log into a company computer, an employee must insert the USB device into the computer and provide a correct password.\n(B) After logging into an account from a new device, a user must enter a code that is sent via e-mail to the e-mail address on file with the account.\n(C) In order to log into an account, a user must provide both a password and a fingerprint that is captured using the user’s device.\n(D) When a user enters an incorrect password more than two times in a row, the user is locked out of the account for 24 hours.", "output": "(D)"}
{"input": "Let l = [1,2,2,3,4]. In Python3, what is a possible output of set(l)?\n(A) {1}\n(B) {1,2,2,3,4}\n(C) {1,2,3,4}\n(D) {4,3,2,2,1}", "output": "(C)"}
{"input": "A sorted list of 120 integers is to be searched to determine whether the value 100 is in the list. Assuming that the most efficient searching algorithm is used, what is the maximum number of elements that must be examined?\n(A) 7\n(B) 8\n(C) 20\n(D) 100", "output": "(A)"}
{"input": "In Python 3, b = [11,13,15,17,19,21]; print(b[::2]) outputs what?\n(A) [19,21]\n(B) [11,15]\n(C) [11,15,19]\n(D) [13,17,21]", "output": "(C)"}
{"input": "A programmer wrote the code segment below to display the average of all the elements in a list called numbers. There is always at least one number in the list.\n Line 1: count ← 0\n Line 2: sum ← 0\n Line 3: FOR EACH value IN numbers\n Line 4: {\n Line 5: count ← count + 1\n Line 6: sum ← sum + value\n Line 7: average ← sum / count\n Line 8: }\n Line 9: DISPLAY (average)\n\n The programmer wants to reduce the number of operations that are performed when the program is run. Which change will result in a correct program with a reduced number of operations performed?\n(A) Interchanging line 1 and line 2\n(B) Interchanging line 5 and line 6\n(C) Interchanging line 6 and line 7\n(D) Interchanging line 7 and line 8", "output": "(D)"}
{"input": "A new bank plans to make customer convenience a priority by minimizing the amount of time a customer waits in line. The bank is considering two options: a single line where the customer at the front waits for the next available teller, or separate lines for each teller. The bank decides to use a computer simulation of these two options to determine the average wait time for customers. Which of the following is NOT true about the bank's plan?\n(A) The bank can incorporate other factors, such as the number of tellers, in the simulation.\n(B) The bank can use the simulation to investigate these two options without causing inconvenience for customers.\n(C) The bank may consider new alternatives based on the simulation results.\n(D) The simulation will not produce usable results because actual customer data are not available.", "output": "(D)"}
{"input": "The boolean expression a[i] == max || !(max != a[i]) can be simplified to\n(A) a[i] == max\n(B) a[i] != max\n(C) a[i] < max || a[i] > max\n(D) FALSE", "output": "(A)"}
{"input": "An algorithm will be used to identify the maximum value in a list of one or more integers. Consider the two versions of the algorithm below.\n\n Algorithm I :  Set the value of a variable max to -1. Iterate through the list of integer\n   values. If a data value is greater than the value of the variable max, set\n  max to the data value.\n Algorithm II : Set the value of a variable max to the first data value. Iterate through the\n   remaining values in the list of integers. If a data value is greater than the\n   value of the variable max, set max to the data value.\n\n Which of the following statements best describes the behavior of the two algorithms?\n(A) Both algorithms work correctly on all input values.\n(B) Algorithm I always works correctly, but Algorithm II only works correctly when the maximum value is not the first value in the list.\n(C) Algorithm II always works correctly, but Algorithm I only works correctly when the maximum value is greater than or equal to -l.\n(D) Neither algorithm will correctly identify the maximum value when the input contains both positive and negative input values.", "output": "(D)"}
