{"input": "Which image data augmentation is most common for natural images?\n(A) random crop and horizontal flip\n(B) random crop and vertical flip\n(C) posterization\n(D) dithering", "output": "(A)"}
{"input": "You are reviewing papers for the World’s Fanciest Machine Learning Conference, and you see submissions with the following claims. Which ones would you consider accepting? \n(A) My method achieves a training error lower than all previous methods!\n(B) My method achieves a test error lower than all previous methods! (Footnote: When regularisation parameter λ is chosen so as to minimise test error.)\n(C) My method achieves a test error lower than all previous methods! (Footnote: When regularisation parameter λ is chosen so as to minimise cross-validaton error.)\n(D) My method achieves a cross-validation error lower than all previous methods! (Footnote: When regularisation parameter λ is chosen so as to minimise cross-validaton error.)", "output": "(C)"}
{"input": "To achieve an 0/1 loss estimate that is less than 1 percent of the true 0/1 loss (with probability 95%), according to Hoeffding's inequality the IID test set must have how many examples?\n(A) around 10 examples\n(B) around 100 examples\n(C) between 100 and 500 examples\n(D) more than 1000 examples", "output": "(D)"}
{"input": "Traditionally, when we have a real-valued input attribute during decision-tree learning we consider a binary split according to whether the attribute is above or below some threshold. Pat suggests that instead we should just have a multiway split with one branch for each of the distinct values of the attribute. From the list below choose the single biggest problem with Pat’s suggestion:\n(A) It is too computationally expensive.\n(B) It would probably result in a decision tree that scores badly on the training set and a testset.\n(C) It would probably result in a decision tree that scores well on the training set but badly on a testset.\n(D) It would probably result in a decision tree that scores well on a testset but badly on a training set.", "output": "(C)"}
